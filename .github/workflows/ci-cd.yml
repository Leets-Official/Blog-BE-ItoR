name: Leets Blog CI/CD Pipeline

on:
  push:
    branches: [ "전수현/main", "전수현/6주차" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant permission to Gradle
        run: chmod +x gradlew

      - name: application.yml 파일 설정
        run: |
          mkdir -p src/main/resources
          printf "%s" "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Run tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/blog?useSSL=false&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: ./gradlew build -x test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build jar
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: soo0711/blog:latest
          build-args: |
            JAR_FILE=build/libs/blog-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull soo0711/blog:latest
            docker stop blog-container || true
            docker rm blog-container || true
            docker run -d --name blog-container -p 8080:8080 soo0711/blog:latest
